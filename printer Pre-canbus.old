[include mainsail.cfg]
[include /home/pi/printer_data/config/Macros/Include-File.cfg]
#[include /home/pi/klipper_config/Macros/*.cfg]
# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Thermistor types                     [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
##old serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_0B0033000650534E4E313020-if00
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_2E0032000250535556323420-if00
#canbus_uuid=26b458b289d0, Application: Klipper (Toolhead SB2209 RP2040)

restart_method: command
##--------------------------------------------------------------------

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 3000             #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: !PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG6
position_min: 0
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#position_endstop: 250
#position_max: 250

##  Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##  Uncomment for 350mm build
position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 25   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: !PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG9
position_min: 0
##--------------------------------------------------------------------

##  Uncomment for 350mm build
position_endstop: 351
position_max: 351

##--------------------------------------------------------------------
homing_speed: 25  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: !PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
endstop_pin: probe:z_virtual_endstop
#endstop_pin: PG10 ###Pre Klicky
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
##--------------------------------------------------------------------

position_max: 330
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3


[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
#stealthchop_threshold: 0       #Spreadcycle
stealthchop_threshold: 999999  #Stealthchop

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.8
sense_resistor: 0.110
#stealthchop_threshold: 0       #Spreadcycle
stealthchop_threshold: 999999  #Stealthchop

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: !PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.8
sense_resistor: 0.110
#stealthchop_threshold: 0       #Spreadcycle
stealthchop_threshold: 999999  #Stealthchop

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
#stealthchop_threshold: 0       #Spreadcycle
stealthchop_threshold: 999999  #Stealthchop


#####################################################################
#   Extruder
#####################################################################

##  Connected to MOTOR_6
##  Heater - HE0
##  Thermistor - T0
[extruder]
max_extrude_only_distance: 200
max_extrude_cross_section: 50.0
step_pin: PE2

dir_pin: PE3 #dir_pin: !PE3 #Brandon: Commented to fix direction when upgrading to Stealthburner
enable_pin: !PD4
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
#rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears
#rotation_distance:  22.1705516   #Old Value From Afterburner
#rotation_distance:  22.5917920804   #Bondtech 5mm Drive Gears
rotation_distance:  22.13524702491643   #Bondtech 5mm Drive Gears
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
gear_ratio: 50:10               #BMG Gear Ratio
microsteps: 16 #Brandon changed to to get more torque 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: PA2
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: ATC Semitec 104NT-4-R025H42G   #Brandon: Sensor for Mosquito
##   sensor_type: PT1000 #Brandon: Sensor for Rapido
sensor_pin: PF4
min_temp: -200 #10 was previous value. Set at -200 to not lose printer power when heater not plugged in.
max_temp: 280
max_power: 1.0
min_extrude_temp: 170
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##  Try to keep pressure_advance below 1.0
pressure_advance: 0.04
##  Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040

##  E0 on MOTOR6
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: PE1
interpolate: false
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - HE1
##  Thermistor - TB
heater_pin: PA3
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: Generic 3950
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.65
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#   Thermals
#####################################################################

#[thermistor chamber_temp]
#temperature1: 25
#resistance1: 10000
#beta: 3950

[temperature_sensor bed_top_temp]
sensor_type: Generic 3950
sensor_pin: PF5
min_temp: 0
max_temp: 120

[temperature_sensor frame_temp]
sensor_type: Generic 3950
sensor_pin: PF7
min_temp: 0
max_temp: 100

#[temperature_sensor enclosure_temp]
#sensor_type: ATC Semitec 104NT-4-R025H42G
#sensor_pin: PF6
#min_temp: 0
#max_temp: 100
#gcode_id: C

[temperature_sensor raspberry_pi_temp]
# Pi Temps
sensor_type: temperature_host
max_temp:100

[temperature_sensor mcu_temp]
# Pi Temps
sensor_type: temperature_mcu
max_temp:100

#####################################################################
#   Probe
#####################################################################

[probe]
##  Inductive Probe
##  This probe is not used for Z height, only Quad Gantry Leveling

## Select the probe port by type:
## For the PROBE port. Will not work with Diode. May need pull-up resistor from signal to 24V.
#pin: ~!PB7
## For the DIAG_7 port. NEEDS BAT85 DIODE! Change to !PG15 if probe is NO.
pin: PG13
## For Octopus Pro PROBE port; NPN and PNP proximity switch types can be set by jumper
#pin: ~!PC5

#--------------------------------------------------------------------

x_offset: 0
y_offset: 0
#z_offset: 6.42
speed: 4.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 3

activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

[bed_mesh]
speed: 300 #120
horizontal_move_z: 12 #5
mesh_min: 20, 20 #40, 40 #30, 30
mesh_max: 340, 340 #310, 310 #330, 330
probe_count: 5, 5
mesh_pps: 2, 3
algorithm: bicubic
bicubic_tension: 0.2
fade_start: 0.6
fade_end: 10.0
algorithm: bicubic
relative_reference_index: 12 # 5x5=12, 7x7=24, (x points * y points) - 1) / 2

#####################################################################
#   Fan Control
#####################################################################

[fan]
##  Print Cooling Fan - FAN0
pin:PD14
kick_start_time: 5.0
cycle_time: 0.010
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.2

[heater_fan hotend_fan]
##  Hotend Fan - FAN1
pin: PE5
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[controller_fan controller_fan]
##  Controller fan - FAN2
pin: PD13
kick_start_time: 0.5
heater: heater_bed
stepper: stepper_x, stepper_y, stepper_z

[heater_fan nevermore_fan]
##  Controller fan - FAN4
pin: PA8
kick_start_time: 0.5
heater: heater_bed

[fan_generic exhaust_fan]
##  Exhaust fan - FAN3
pin: PD12
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

[nevermore]
# Can omit if you have only one nevermore in range.
# See <<Finding The BT Address>> for more info.
# NOTE: Providing an address will make startup slightly faster.
#       (If no address is provided then the system must spend extra time
#        verifying that there's only one nearby Nevermore.)
# example - `bt_address: 43:43:A2:12:1F:AC`
bt_address: 28:CD:C1:0F:47:3F
connection_initial_timeout: 0

# MOSTLY OBSOLETE.
# Mainsail 2.7.1 introduced dedicated support for Nevermore controllers, simply having
# `[nevermore]` is sufficient to display sensor values in the 'Temperatures' panel.
#
# Only remaining useful behaviour for `temperature_sensors` is the `plot_voc` option
# which allows drawing the VOC index values for intake/exhaust in the temperature plot.
#[temperature_sensor nevermore_intake_VOC]
#sensor_type: NevermoreSensor  # fixed, must be `NevermoreSensor`

# valid values: `intake`, `exhaust`
#sensor_kind: intake

# Pretends the VOC index is a temperature, allowing it to be plotted in Mainsail/Fluidd.
# Setting this to `true` will suppress the all other readings for this sensor object.
# (e.g. temperature, pressure, etc)
#plot_voc: true

#####################################################################
#   LED Control
#####################################################################

# Chamber Lighting - HE2 Connector
[output_pin caselight]
pin: PD15
pwm:true
shutdown_value: 0
value:1
cycle_time: 0.01

#####################################################################
#   Servo Control
#####################################################################
[servo brush_servo]
pin: PB6            # For Octopus 1.1
#   PWM output pin controlling the servo. This parameter must be
#   provided.
maximum_servo_angle: 180
#   The maximum angle (in degrees) that this servo can be set to. The
#   default is 180 degrees.
minimum_pulse_width: 0.0005
#   The minimum pulse width time (in seconds). This should correspond
#   with an angle of 0 degrees. The default is 0.001 seconds.
maximum_pulse_width: 0.0025
#   The maximum pulse width time (in seconds). This should correspond
#   with an angle of maximum_servo_angle. The default is 0.002
#   seconds.
initial_angle: 175
#   Initial angle (in degrees) to set the servo to. The default is to
#   not send any signal at startup.
#initial_pulse_width:
#   Initial pulse width time (in seconds) to set the servo to. (This
#   is only valid if initial_angle is not set.) The default is to not
#   send any signal at startup.

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
home_xy_position: 175,175
speed:100
z_hop:10

[quad_gantry_level]
##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions

##  Gantry Corners for 350mm Build
##  Uncomment for 350mm build
gantry_corners:
   -60,-10
   410,420
##  Probe points
points:
   50,25
   50,275
   300,275
   300,25

#--------------------------------------------------------------------
speed: 100
horizontal_move_z: 20
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Displays
#####################################################################

##  Uncomment the display that you have
#--------------------------------------------------------------------

#[display]
##  RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

#--------------------------------------------------------------------

#[display]
##  mini12864 LCD Display
#lcd_type: uc1701
#cs_pin: EXP1_3
#a0_pin: EXP1_4
#rst_pin: EXP1_5
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2
#contrast: 63
#spi_software_miso_pin: EXP2_1
#spi_software_mosi_pin: EXP2_6
#spi_software_sclk_pin: EXP2_2

#[neopixel btt_mini12864]
##  To control Neopixel RGB in mini12864 display
#pin: EXP1_6
#chain_count: 3
#initial_RED: 0.1
#initial_GREEN: 0.5
#initial_BLUE: 0.0
#color_order: RGB

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------


#####################################################################
#   Macros
#####################################################################

[gcode_macro G32]
gcode:
    STATUS_HOMING
    BED_MESH_CLEAR
    G28
    STATUS_READY
    QUAD_GANTRY_LEVEL
    G28 z
    BED_MESH_CALIBRATE
    g90

    ##  350mm build
    G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
    
   
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:

    CASE_LIGHTS_ON
    SET_FAN_SPEED FAN=nevermore_fan SPEED=1
    STATUS_HEATING
    {% set BED = params.BED|int %}
    {% set HOTEND = params.HOTEND|int %}
    {% set CHAMBER = params.CHAMBER|default(0)|int %}

    G90
    M140 S{BED}
    #heatsoak (Using either chamber temp wait command or Gcode pause or other methods)
    M190 S{BED}
    G32
    M109 S{HOTEND} 
    #TEMPERATURE_WAIT SENSOR="temperature_sensor chamber_temp" MINIMUM={CHAMBER}
    #M191 S{CHAMBER}
    STATUS_READY

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}

    ;ERCF Eject Condition
    {% set unload = params.UNLOAD_AT_END|default(0)|int %}

    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-2.0 F3600                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear

    ;ERCF Eject Condition
    {% if unload|int == 1%}
      ERCF_EJECT
    {% endif %}

    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    CASE_LIGHTS_OFF
    STATUS_OFF

# ASSUME: Your `print_end` macro calls `TURN_OFF_HEATERS`.
[gcode_macro TURN_OFF_HEATERS]
rename_existing: NEVERMORE_CONTROLLER_INNER_TURN_OFF_HEATERS
gcode:
    NEVERMORE_CONTROLLER_INNER_TURN_OFF_HEATERS
    # Clear the fan control override, we're cooling down
    # NB: Setting SPEED=0 does *NOT* clear control override.
    #     It instead forces the speed to 0.
    #     Omit `SPEED` argument entirely to clear override.
    SET_FAN_SPEED FAN=nevermore_fan

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 46.764
#*# pid_ki = 1.190
#*# pid_kd = 459.457
#*#
#*# [probe]
#*# z_offset = -0.620
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 23.955
#*# pid_ki = 1.389
#*# pid_kd = 103.306
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.085000, 0.031250, 0.053750, -0.015000, -0.100000
#*# 	  -0.058750, 0.015000, 0.031250, 0.002500, -0.126250
#*# 	  -0.037500, -0.011250, 0.000000, -0.027500, -0.118750
#*# 	  -0.071250, -0.005000, 0.005000, -0.022500, -0.140000
#*# 	  -0.056250, 0.022500, 0.073750, 0.017500, -0.061250
#*# tension = 0.2
#*# min_x = 20.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 3
#*# min_y = 20.0
#*# x_count = 5
#*# max_y = 340.0
#*# mesh_x_pps = 2
#*# max_x = 340.0
